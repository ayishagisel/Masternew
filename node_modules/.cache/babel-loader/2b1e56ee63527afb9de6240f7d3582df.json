{"ast":null,"code":"import _classCallCheck from \"/Users/student_40/teamteam/SpaceApps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/student_40/teamteam/SpaceApps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/student_40/teamteam/SpaceApps/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/student_40/teamteam/SpaceApps/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/student_40/teamteam/SpaceApps/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/student_40/teamteam/SpaceApps/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Map from \"./components/Map\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      radius: \"\",\n      energy: \"\",\n      mass: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateStateRadius\",\n    value: function updateStateRadius(radius, name) {\n      this.setState({\n        radius: radius,\n        name: name\n      });\n    }\n  }, {\n    key: \"updateStateEnergy\",\n    value: function updateStateEnergy(energy, name) {\n      this.setState({\n        energy: energy,\n        name: name\n      });\n    }\n  }, {\n    key: \"updateStateMass\",\n    value: function updateStateMass(mass, name) {\n      this.setState({\n        mass: mass,\n        name: name\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"https://teasteroidm-api.herokuapp.com/api\").then(function (json) {\n        return json.data.map(function (result) {\n          return _this2.updateStateRadius(result.blastRadius, result.name);\n        }, function (result) {\n          return _this2.updateStateEnergy(result.energy, result.name);\n        }, function (result) {\n          return _this2.updateStateMass(result.mass, result.name);\n        });\n      }); // .then(newData => console.log(newData));\n      //==========\n\n      this.getAllData();\n    }\n  }, {\n    key: \"getCircleOptions\",\n    value: function getCircleOptions() {\n      var lat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40.73061;\n      var lng = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -73.935242;\n      var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Math.sqrt(1000) * 100;\n      return {\n        strokeColor: \"#FF0000\",\n        strokeOpacity: 0.8,\n        strokeWeight: 0.35,\n        fillColor: \"#FF0000\",\n        fillOpacity: 0.35,\n        center: {\n          lat: lat,\n          lng: lng\n        },\n        radius: radius\n      };\n    }\n  }, {\n    key: \"getAllData\",\n    value: function getAllData() {\n      axios.get(\"https://teasteroidm-api.herokuapp.com/api\", {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (results) {\n        console.log(results);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var radius = this.state.radius;\n      var energy = this.state.energy;\n      var mass = this.state.mass;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Map, {\n        circleOptions: this.getCircleOptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), \" \", React.createElement(\"div\", {\n        id: \"knowledge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" Energy Amount: \", energy, \" \"), \" \", React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" Mass: \", mass, \" \"), \" \", React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" Velocity \"), \" \", React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" Blast Radius: \", radius, \" \"), \" \", React.createElement(\"a\", {\n        href: \"https://www.nasa.gov/feature/jpl/nasa-and-fema-conduct-asteroid-impact-emergency-planning-exercise\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Emergency Preparedness Plan \"), \" \"), \" \"), React.createElement(\"div\", {\n        id: \"about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"The Tracking Extraterrestrial Astroids and Meteorites(T.E.A.M) was created for the purpose to identify potential asteroids threats that could potentially hit the earth atmosphere. \", \" \", \" \"), \" \");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/student_40/teamteam/SpaceApps/src/App.js"],"names":["React","Component","axios","Map","App","state","radius","energy","mass","name","setState","get","then","json","data","map","result","updateStateRadius","blastRadius","updateStateEnergy","updateStateMass","getAllData","lat","lng","Math","sqrt","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","center","headers","results","console","log","getCircleOptions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Map from \"./components/Map\";\nimport \"./App.css\";\n\nclass App extends Component {\n    state = {\n        radius: \"\",\n        energy: \"\",\n        mass: \"\"\n    };\n    updateStateRadius(radius, name) {\n        this.setState({ radius, name });\n    }\n    updateStateEnergy(energy, name) {\n        this.setState({ energy, name });\n    }\n    updateStateMass(mass, name) {\n        this.setState({ mass, name });\n    }\n    componentDidMount() {\n        axios\n            .get(\"https://teasteroidm-api.herokuapp.com/api\")\n            .then(json =>\n                json.data.map(\n                    result => this.updateStateRadius(result.blastRadius, result.name),\n                    result => this.updateStateEnergy(result.energy, result.name),\n                    result => this.updateStateMass(result.mass, result.name)\n                )\n            );\n        // .then(newData => console.log(newData));\n        //==========\n        this.getAllData();\n    }\n    getCircleOptions(\n        lat = 40.73061,\n        lng = -73.935242,\n        radius = Math.sqrt(1000) * 100\n    ) {\n        return {\n            strokeColor: \"#FF0000\",\n            strokeOpacity: 0.8,\n            strokeWeight: 0.35,\n            fillColor: \"#FF0000\",\n            fillOpacity: 0.35,\n            center: { lat, lng },\n            radius: radius\n        };\n    }\n    getAllData() {\n        axios\n            .get(\"https://teasteroidm-api.herokuapp.com/api\", {\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n            .then(results => {\n                console.log(results);\n            });\n    }\n\n    render() {\n        const radius = this.state.radius;\n        const energy = this.state.energy;\n        const mass = this.state.mass;\n        return ( <\n            div className = \"App\" >\n            <\n            header / >\n            <\n            Map circleOptions = { this.getCircleOptions() }\n            /> <\n            div id = \"knowledge\" >\n            <\n            ul >\n            <\n            li > Energy Amount: { energy } < /li> <\n            li > Mass: { mass } < /li> <\n            li > Velocity < /li> <\n            li > Blast Radius: { radius } < /li> <\n            a href = \"https://www.nasa.gov/feature/jpl/nasa-and-fema-conduct-asteroid-impact-emergency-planning-exercise\" >\n            Emergency Preparedness Plan <\n            /a> <\n            /ul> <\n            /div>\n\n            <\n            div id = \"about\" / >\n            <\n            p >\n            The Tracking Extraterrestrial Astroids and Meteorites(T.E.A.M) was created\n            for the purpose to identify potential asteroids threats that could potentially hit the earth atmosphere. { \" \" } <\n            /p> <\n            /div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}